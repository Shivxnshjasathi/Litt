# Add project specific ProGuard rules here.
# You can control the set of applied configuration files using the
# proguardFiles setting in build.gradle.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

# --- Jetpack Compose Rules ---
# Keep all composable functions and their metadata.
-keep public class * implements androidx.compose.runtime.Composable {
    public <init>();
    public *;
}

# Keep the @Composable annotation and its properties.
-keep @androidx.compose.runtime.Composable <methods>;

# Keep classes that are annotated with @Stable or @Immutable
-keepclassmembers class * {
    @androidx.compose.runtime.Stable <fields>;
    @androidx.compose.runtime.Immutable <fields>;
}

# Keep classes related to Compose's internal state management and composition.
-keepclassmembers class androidx.compose.runtime.** {
    *;
}

# Keep classes generated by the Compose compiler for composable functions.
-keepclassmembers class **.ComposableSingletons* {
    *;
}

# Keep specific methods used by the Compose runtime for reflection.
-keepclassmembers class * {
    @androidx.compose.ui.tooling.preview.Preview <methods>;
}
-keepclassmembers class * {
    @androidx.compose.runtime.Composable <methods>;
}

# Keep serialization classes if you are using Kotlinx Serialization
-keepclasseswithmembers 'public class * { @kotlinx.serialization.Serializable *; }'
-keepclassmembers 'class * { @kotlinx.serialization.Serializable *; }'
-keepclassmembers 'class **.$serializer { *; }'